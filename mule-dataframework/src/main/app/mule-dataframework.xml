<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">

<!-- JMS endpoint Configuration -->    
 	<spring:beans>
        <spring:bean name="connectionFactory" class="org.hornetq.jms.client.HornetQJMSConnectionFactory">
            <spring:constructor-arg value="false"/>
            <spring:constructor-arg>
                <spring:bean class="org.hornetq.api.core.TransportConfiguration">
                    <spring:constructor-arg value="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory"/>
                    <spring:constructor-arg>
                        <spring:map value-type="java.lang.Object" key-type="java.lang.String">
                            <spring:entry key="port" value="5545"/>
                        </spring:map>
                    </spring:constructor-arg>
                </spring:bean>
            </spring:constructor-arg>
        </spring:bean>
    </spring:beans>
 
<!-- JMS endpoint -->
    <jms:connector name="remote-jms-connector"  username="guest" password="guest" specification="1.1" numberOfConsumers="100" connectionFactory-ref="connectionFactory" doc:name="JMS">
    	<reconnect-forever frequency="50000" blocking="false"/>
    </jms:connector> 
    
    <jms:endpoint name="jmsEndPoint"  queue="queue/requestQueue" connector-ref="remote-jms-connector" doc:name="JMS"/>
    
<!-- File endpoint -->
    <file:endpoint name="fileEndPoint"  path="D:\T24filesource" responseTimeout="10000" doc:name="File"/> 
    
<!-- Oracle data source -->
    <jdbc-ee:oracle-data-source name="Oracle_Data_Source" user="t24" password="t24" url="jdbc:oracle:thin:@10.44.5.93:1522/JBDF2" transactionIsolation="UNSPECIFIED" doc:name="Oracle Data Source"/>
    <jdbc-ee:connector name="Database" dataSource-ref="Oracle_Data_Source" validateConnections="true" queryTimeout="-1" pollingFrequency="0" doc:name="Database"/>
    <vm:endpoint exchange-pattern="one-way" name="SolrVM" address="vm://solrvm" doc:name="VM"/>
    <vm:endpoint exchange-pattern="one-way" name="DBVM" address="vm://dbVM" doc:name="VM"/>
    <http:endpoint exchange-pattern="request-response" name="solrEPR" contentType="text/xml" 
    				host="localhost" port="8983" path="solr/#[flowVars['solrCoreName']]/update?commit=true" 
    				method="POST" doc:name="HTTP" responseTransformer-refs="objToStringTransformer"/>

   	<object-to-string-transformer doc:name="Object to String" name="objToStringTransformer"/>
    <data-mapper:config name="sam_grf" transformationGraphPath="sam.grf" doc:name="DataMapper"/>

       
    <flow name="jmsFlow" doc:name="jmsFlow" doc:description="Main flow - It recieves T24 messages from JMS Queue and send to solrFlow and dbFlow">
        <inbound-endpoint ref="jmsEndPoint" doc:name="Generic"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="Message recieved from JSM #[payload]" level="INFO" doc:name="Logger"/>
        <all doc:name="All">
            <vm:outbound-endpoint exchange-pattern="one-way" ref="SolrVM" doc:name="SolrVM"/>
            <!-- <vm:outbound-endpoint exchange-pattern="one-way" ref="DBVM" doc:name="DBVM"/> -->
        </all>
    </flow>
    
    <flow name="solrFlow" doc:name="solrFlow" doc:description="Solr Flow - 
		It recieves T24 Message from VM queue 
		Transfroms to the solr input document 
		Send the input document to the Solr for indexing">
        <vm:inbound-endpoint exchange-pattern="one-way" ref="SolrVM" doc:name="SolrVM"/>
         <choice doc:name="Choice">
            <when expression="/Account" evaluator="xpath">
                <mulexml:xslt-transformer maxIdleTransformers="2" maxActiveTransformers="5" xsl-file="xsl/accounttosolradd.xsl" doc:name="Account XSLT"/>
				<set-variable value="accountcore" variableName="solrCoreName" doc:name="Variable" />
            </when>
            <when expression="/Customer" evaluator="xpath">
       			<mulexml:xslt-transformer maxIdleTransformers="2" maxActiveTransformers="5" xsl-file="xsl/customertosolradd.xsl" outputEncoding="UTF-8" doc:name="Customer XSLT"/>
				<set-variable value="customercore" variableName="solrCoreName" doc:name="Variable" />
            </when>
        </choice>
        <logger message="Solr input document #[payload]" level="INFO" doc:name="Logger"/>
        <http:outbound-endpoint ref="solrEPR" doc:name="HTTP" exchange-pattern="request-response" method="POST"/>
        <logger message="Solr response #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    
    <flow name="dbFlow" doc:name="dbFlow">
        <vm:inbound-endpoint exchange-pattern="one-way" ref="DBVM" doc:name="DBVM"/>
		<jdbc-ee:outbound-endpoint exchange-pattern="one-way" queryTimeout="-1" connector-ref="Database" doc:name="Database" queryKey="addCustomer">
            <jdbc-ee:query key="addCustomer" value="insert into customer_stage (id, shortname, name1, name2, mnemonic, address, postcode) values (#[message.payload[0]],#[message.payload[1]],#[message.payload[2]],#[message.payload[3]],#[message.payload[4]],#[message.payload[5]],#[message.payload[6]])"/>
        </jdbc-ee:outbound-endpoint>    
	</flow>


</mule>
